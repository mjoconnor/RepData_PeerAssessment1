find.packages("devtools")
find.package("devtools")
library(devtools)
find_rtools()
source('E:/Coursera/R Programming/Week 3/ProgrammingAssignment2/cachematrix.R')
x <- matrix(c(2,7,4,7),2,2)
x
m <- makeCacheMatrix(x)
m$get()
m
m$get.matrix
m$get.matrix()
cacheSolve(m)
cacheSolve(m)
cacheSolve(m)
x <- matrix(c(2,9,4,7),2,2)
cacheSolve(m)
m <- makeCacheMatrix(x)
cacheSolve(m)
cacheSolve(m)
source('E:/Coursera/R Programming/Week 3/ProgrammingAssignment2/cachematrix.R')
x <- matrix(c(2,9,4,7),2,2)
m <- makeCacheMatrix(x)
cacheSolve(m)
cacheSolve(m)
x <- matrix(c(2,9,4,7,5,6),2,3)
m <- makeCacheMatrix(x)
x <- matrix(c(2,9,4,7,5,6),2,3)
m <- makeCacheMatrix(x)
cacheSolve(m)
source('E:/Coursera/R Programming/Week 3/ProgrammingAssignment2/cachematrix.R')
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?xyplot
?par
?splom
?print
?trellis
?trellis.par.set
?lines
?text
?axis
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality)
library(gglot2)
library(gglot)
intall.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, geom = "smooth")
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies) + geom_smooth()
?llines
setwd("E:/Coursera/Reproducible Research/Week 2")
?install
?packages
help
install.packages("knitr")
setwd("E:/Coursera/Reproducible Research/Week 2/RepData_PeerAssessment1")
setwd("E:/Coursera/Reproducible Research/Week 2/RepData_PeerAssessment1")
data <- read.csv("activity.csv")
View(data)
?aggregate
steps <- aggregate(steps ~ date, data = data,sum)
View(steps)
hist(steps)
?hist
hist(steps$steps)
hist(steps$date)
hist(steps$steps, breaks=500)
hist(steps$steps, breaks=10)
hist(steps$steps)
hist(steps$steps, breaks=10)
hist(steps$steps, breaks=20, main="Frequency of Total Daily Steps", xlab="Steps", col="gray")
mean(steps$steps)
median(steps$steps)
summary(steps)
table(summary(steps$steps))
summary(steps$steps)
table(summary(steps))
table(c(mean(steps$steps),median(steps$steps)))
table(c("Mean" = mean(steps$steps),"Median" = median(steps$steps)))
steps
View(data)
View(data)
time <- aggregate(steps ~ interval,data=data,avg)
time <- aggregate(steps ~ interval,data=data,avgerage)
time <- aggregate(steps ~ interval,data=data,mean)
View(time)
View(time)
?plot
plot(time$interval,time$steps,type="l")
plot(time$interval,time$steps,type="l",xlim=2500)
plot(time$interval,time$steps,type="l",xlim="2500")
plot(time$interval,time$steps,type="l",xlim=c(0,2500))
plot(time$interval,time$steps,type="l",xlim=c(0,2355))
plot(time$interval,time$steps,type="l",xlim=c(0,2355))
axis(1,at = seq(0,2355, by=30))
axis(1,at = seq(0,2355, by=60))
plot(time$interval,time$steps,type="l",xlim=c(0,2355))
axis(1,at = seq(0,2355, by=60))
axis(1,at = seq(0,2355, by=60), las=2)
plot(time$interval,time$steps,type="l",xlim=c(0,2355))
axis(1,at = seq(0,2355, by=60), las=2)
plot(time$interval,time$steps,type="l",xlim=c(0,2355),xaxt="n")
axis(1,at = seq(0,2355, by=60), las=2)
axis(1,at = seq(0,2400, by=60), las=2)
time[1,1] <- 2400
time
plot(time$interval,time$steps,type="l",xlim=c(0,2355),xaxt="n")
plot(time$interval,time$steps,type="l",xlim=c(0,2400),xaxt="n")
axis(1,at = seq(0,2400, by=60), las=2)
time <- data
time[time$interval==0]
time[time$interval==0,]
time[time$interval==0,] <- 2400
time <- data
time[time$interval==0,] <- 2400
time
time <- aggregate(steps ~ interval,data=data,mean)
plot(time$interval,time$steps,type="l",xlim=c(0,2355),xaxt="n")
str(data)
str(time)
max(time$steps)
time[max(time$steps),]
time[which.max(time$steps),]
time[time[which.max(time$steps),]]
time[which.max(time$steps),]
time[which.max(time$steps)]
which.max(time$steps)
time[104]
time[104,]
time[104,1]
time[which.max(time$steps),1]
?sum
is.na(data$steps)
sum(is.na(data$steps))
data[is.na,]
data[is.na(data$steps),]
rows(data[is.na(data$steps),])
row(data[is.na(data$steps),])
nrow(data[is.na(data$steps),])
comp <- data[is.na(data)]
comp <- data
comp[is.na(comp)] <- 0
head(comp)
View(comp)
View(comp)
View(data)
View(data)
comp <- data
comp[is.na(comp)] <- match(comp$interval,time$interval)
match(comp$interval,time$interval)
?match
?if
else
?ifelse
comp$steps[is.na]
comp$steps[is.na,]
comp[is.na(comp$steps)] <- 0
comp$steps[is.na(comp$steps)] <- 0
head(comp)
comp <- data
comp$steps[is.na(comp$steps)] <- time$steps[match(comp$interval,time$interval)]
which(is.na(comp$steps))
head(comp)
View(time)
View(time)
nrow(comp[is.na(comp$steps),])
comp <- data
comp$steps[is.na(comp$steps)] <- time$steps[match(time$interval,comp$interval)]
head(comp)
View(comp)
?mapply
weekday <- data
rm(weekday)
?weekdays
week <- data
week?weekday <- weekdays(week$date)
str(data)
data <- read.csv("activity.csv"colClasses=c("int","Date","int"))
data <- read.csv("activity.csv", colClasses=c("int","Date","int"))
data <- read.csv("activity.csv", colClasses=c("number","Date","number"))
data <- read.csv("activity.csv", colClasses=c("integer","Date","integer"))
str(data)
week <- data
week?weekday <- weekdays(week$date)
week$weekday <- weekdays(week$date)
head(week)
week$weekday <- lapply(week$weekday, function(x) ifelse(x == ("Sunday" | "Saturday"),"Weekend","Weekday"))
week$weekday <- lapply(week$weekday, function(x) ifelse(x == "Sunday" || "Saturday","Weekend","Weekday"))
week$weekday <- lapply(week$weekday, function(x) ifelse(x == "Sunday" | "Saturday","Weekend","Weekday"))
week$weekday <- lapply(week$weekday, function(x) ifelse(x == "Sunday","Weekend","Weekday"))
head(week)
week$weekday <- lapply(week$weekday, function(x) ifelse(x == "Sunday" | x == "Saturday","Weekend","Weekday"))
head(week)
View(week)
nrow(week[week$weekday == "Weekend"])
nrow(week[week$weekday == "Weekday"])
nrow(week[week$weekday == "Weekday"])
nrow(week[week[4] == "Weekday"])
nrow(week[,3 == "Weekday"])
nrow(week[,3 == "Weekend"])
aggregate(date ~ weekend,data=week,sum)
aggregate(date ~ weekday,data=week,sum)
str(week)
week <- data
rm(weekday)
week$weekday <- lapply(week$weekday, function(x) ifelse(x == "Sunday" | x == "Saturday","Weekend","Weekday"))
week$weekday <- lapply(weekdays(date), function(x) ifelse(x == "Sunday" | x == "Saturday","Weekend","Weekday"))
week$weekday <- weekdays(week$date)
week$weekday <- lapply(week$weekday, function(x) ifelse(x == "Sunday" | x == "Saturday","Weekend","Weekday"))
aggregate(date ~ weekday,data=week,sum)
str(week)
week <- data
week$weekday <- weekdays(week$date)
week$weekday <- apply(week$weekday, function(x) ifelse(x == "Sunday" | x == "Saturday","Weekend","Weekday"))
week <- data
week$weekday <- weekdays(week$date)
str(week)
week <- data
week$weekday <- ifelse(weekdays(week$date)=="Saturday"|weekdays(week$date)=="Sunday","Weekend","Weekday")
head(week)
str(week)
nrow(week[week$weekday == "Weekend"])
nrow(week[week$weekday == "Weekend",])
nrow(week[week$weekday == "Weekday",])
aggregate(date ~ weekday,data=week,sum)
aggregate(date ~ weekday,data=week,count)
?count
aggregate(date ~ weekday,data=week,nrow)
aggregate(weekday,data=week,nrow)
aggregate(x ~ weekday,data=week,nrow)
aggregate(x ~ weekday,data=week,sum)
aggregate(steps ~ weekday,data=week,length)
aggregate(interval ~ weekday,data=week,length)
comp$weekday <- ifelse(weekdays(comp$date) == "Saturday" | weekdays(comp$date) == "Sunday", "Weekend", "Weekday")
data <- read.csv("activity.csv", colClasses=c("integer","Date","integer"))
comp <- data
comp$steps[is.na(comp$steps)] <- time$steps[match(time$interval,comp$interval)]
comp$weekday <- ifelse(weekdays(comp$date) == "Saturday" | weekdays(comp$date) == "Sunday", "Weekend", "Weekday")
comp.time <- aggregate(interval ~ weekdays,data=comp,mean)
comp.time <- aggregate(interval ~ weekday,data=comp,mean)
View(comp.time)
comp.time <- aggregate(steps ~ interval+weekday,data=comp,mean)
View(comp.time)
View(time)
View(comp.time)
?layout
layout(c(1,2),1,1)
comp.weekend <- aggregate(steps ~ interval+weekday = "Weekday",data=comp,mean)
comp.weekend <- aggregate(steps ~ interval+weekday,data=comp[comp$weekday == "Weekday"],mean)
comp.weekend <- aggregate(steps ~ interval+weekday,data=comp[comp$weekday == "Weekday",],mean)
comp.weekend <- aggregate(steps ~ interval+weekday,data=comp[comp$weekday == "Weekend",],mean)
comp.weekday <- aggregate(steps ~ interval+weekday,data=comp[comp$weekday == "Weekday",],mean)
plot(comp.weekend$interval,comp.weekend$steps,type="l")
plot(comp.weekday$interval,comp.weekday$steps,type="l")
?xyplot
library(lattice)
?xyplot
xyplot(steps ~ interval | weekday, data = comp.time)
xyplot(steps ~ interval | weekday, data = comp.time, type = "l")
xyplot(steps ~ interval | weekday, data = comp.time, type = "l",layout=c(1,2))
